function empty(mxv){
		if (mxv === "" || mxv === 0 || mxv === "0" || mxv === null || mxv === false || typeof mxv === 'undefined'){
			return true;
		}
		if (typeof mxv == 'object') {
			for (var key in mxv){
				return false;
			}
			return true;
		}		
		return false;
	}
	function mCustomScrollbars(){
		if ($("#mcs_container .content").length){
			$("#mcs_container").mCustomScrollbar("vertical",300,"easeOutCirc",1.05,"auto","yes","yes",15); 
		}
	}
	/* function to load new content dynamically */
	function LoadNewContent(id,file){
		$("#"+id+" .customScrollBox .content").load(file,function(){
			mCustomScrollbars();
		});
	}
	
	function equalSize (classe){
		
		var maxheight = 0;
		
		$(classe).each(function(index,el){
			var thisheight = $(this).height();
			if (thisheight > maxheight) {maxheight = thisheight;}
		});
		
		$(classe).height(maxheight);
	}

	var slides;
	
	var GGconfig = {
		siteURL		: 'worldseg.com.br',	// Change this to your site
		searchSite	: true,
		type		: 'web',
		append		: false,
		perPage		: 8,			// A maximum of 8 is allowed by Google
		page		: 0				// The start page
	}
	$('#searchform').submit(function(){
		googleSearch();
		return false;
	});
	
	function googleSearch(settings){
		
		// If no parameters are supplied to the function, it takes its defaults from the config object above:
		
		settings = $.extend({},GGconfig,settings);
		settings.term = settings.term || $('#s').val();
		
		if(settings.searchSite){ settings.term = 'site:'+settings.siteURL+' '+settings.term; }
		
		// URL of Google's AJAX search API
		var apiURL = 'http://ajax.googleapis.com/ajax/services/search/'+settings.type+'?v=1.0&callback=?';
		var resultsDiv = $('#resultsDiv');
		
		$.getJSON(apiURL,{q:settings.term,rsz:settings.perPage,start:settings.page*settings.perPage},function(r){
			
			var results = r.responseData.results;
			$('#more').remove();
			
			if(results.length){
				
				//hide others 
				window.slides.stop();
				$("#slideshow, #main").fadeOut();
				
				// If results were returned, add them to a pageContainer div, after which append them to the #resultsDiv:
				var pageContainer = $('<div>',{className:'pageContainer'});
				
				for (var i=0;i<results.length;i++){ 
					pageContainer.append(new result(results[i]) + ''); // Creating a new result object and firing its toString method:
				}
				resultsDiv.css({'margin-bottom':'300px'});
				
				if(!settings.append){
					resultsDiv.empty().css({'margin-bottom':'auto'});; // This is executed when running a new search, instead of clicking on the More button:
				}
				
				pageContainer.append('<div class="clear"></div>').hide().appendTo(resultsDiv).fadeIn('slow');
				
				var cursor = r.responseData.cursor;
				
				// Checking if there are more pages with results, and deciding whether to show the More button:
				if( +cursor.estimatedResultCount > (settings.page+1)*settings.perPage){
					$('<div>',{id:'more', className:'glassbutton'}).appendTo(resultsDiv).click(function(){
						googleSearch({append:true,page:settings.page+1});
						$(this).fadeOut();
					});
				}
				$("#more").html("Mais resultados");
				resultsDiv.prepend("<div class='alignRight'><button class='subtleButton' id='closeSearch' type='button'>Fechar pesquisa</button></div>");
				resultsDiv.find("#closeSearch").click(function(e) {
					resultsDiv.fadeOut('slow',function(){
						resultsDiv.empty();
						$("#slideshow, #main").fadeIn();
						window.slides.start();
					});
				});
				
			}
			else {
				
				// No results were found for this search.
				
				resultsDiv.empty();
				$('<p>',{className:'notFound',html:'Nenhum resultado encontrado!'}).hide().appendTo(resultsDiv).css({'color':'red'}).fadeIn();
			}
		});
	}
	function result(r){
		
		// This is class definition. Object of this class are created for
		// each result. The markup is generated by the .toString() method.
		
		var arr = [];
		
		// GsearchResultClass is passed by the google API
		switch(r.GsearchResultClass){

			case 'GwebSearch':
				arr = [
					'<div class="webResult">',
					'<h2><a href="',r.unescapedUrl,'" target="_blank">',r.title,'</a></h2>',
					'<p>',r.content,'</p>',
					'<a href="',r.unescapedUrl,'" target="_blank">',r.visibleUrl,'</a>',
					'</div>'
				];
			break;
			case 'GimageSearch':
				arr = [
					'<div class="imageResult">',
					'<a target="_blank" href="',r.unescapedUrl,'" title="',r.titleNoFormatting,'" class="pic" style="width:',r.tbWidth,'px;height:',r.tbHeight,'px;">',
					'<img src="',r.tbUrl,'" width="',r.tbWidth,'" height="',r.tbHeight,'" /></a>',
					'<div class="clear"></div>','<a href="',r.originalContextUrl,'" target="_blank">',r.visibleUrl,'</a>',
					'</div>'
				];
			break;
			case 'GvideoSearch':
				arr = [
					'<div class="imageResult">',
					'<a target="_blank" href="',r.url,'" title="',r.titleNoFormatting,'" class="pic" style="width:150px;height:auto;">',
					'<img src="',r.tbUrl,'" width="100%" /></a>',
					'<div class="clear"></div>','<a href="',r.originalContextUrl,'" target="_blank">',r.publisher,'</a>',
					'</div>'
				];
			break;
			case 'GnewsSearch':
				arr = [
					'<div class="webResult">',
					'<h2><a href="',r.unescapedUrl,'" target="_blank">',r.title,'</a></h2>',
					'<p>',r.content,'</p>',
					'<a href="',r.unescapedUrl,'" target="_blank">',r.publisher,'</a>',
					'</div>'
				];
			break;
		}
		
		// The toString method.
		this.toString = function(){
			return arr.join('');
		}
	}
	
	$(function(){
	
		/*slides = $('#slides').flux(/*{
			autoplay: false,
			pagination: true,
			transitions: Array('bars','blocks2','blinds3d','dissolve')
		}* /);*/
		window.slides = new flux.slider('#slides',{
			autoplay: true,
			pagination: true,
			transitions: ['bars','blocks', 'blocks2','blinds3d','slide'],
			delay:5000
		});
		
		mCustomScrollbars();
		equalSize(".col_x2");
	
	});
